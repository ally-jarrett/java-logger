<?xml version="1.0" encoding="UTF-8"?>
<configuration>

<!--    <property resource="application.properties"/>-->
<!--    <property resource="application-openshift.properties"/>-->
    <contextListener class="org.rh.example.config.LogbackStartupListener"/>

    <springProperty name="LOG_PATH"
                    source="LOG_PATH"
                    defaultValue="logs"/>

    <springProperty name="asyncLoggingSwitch"
                    source="core.logging.appenders.async.switch"
                    defaultValue="ASYNC_"/>

<!--    t=thread, X=mdc context, %logger{XX}=package naming -->
    <springProperty name="stdoutPattern"
                    source="core.logging.appenders.stdout.pattern"
                    defaultValue="%d{yyyy-MM-dd HH:mm:ss.SSS} ${HOSTNAME} [%t] [%level] %logger{36} [%X] - %msg%n"/>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>
<!--                ${stdoutPattern}-->
                %d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger{36}.%M - %msg%n
            </Pattern>
        </encoder>
    </appender>


    <springProperty name="appLogFileName"
                    source="core.logging.appenders.appLog.fileName"
                    defaultValue="app"/>

    <springProperty name="appLogFileExtension"
                    source="core.logging.appenders.appLog.fileExtension"
                    defaultValue=".log"/>

    <springProperty name="appLogPattern"
                    source="core.logging.appenders.appLog.pattern"
                    defaultValue="%d{yyyy-MM-dd HH:mm:ss.SSS} ${HOSTNAME} [%t] [%level] %logger{36} [%X] - %msg%n"/>

    <springProperty name="appLogTimeBasedPattern"
                    source="core.logging.appenders.appLog.timeBasedRollingPolicy.timeBasedPattern"
                    defaultValue="%d{&quot;dd-MM-yyyy&quot;}"/>

    <springProperty name="appLogMaxFileSize"
                    source="core.logging.appenders.appLog.sizeBasedTriggeringPolicy.maxFileSize"
                    defaultValue="500MB"/>

    <springProperty name="appLogMaxFileIndex"
                    source="core.logging.appenders.appLog.fixedWindowRollingPolicy.maxFileIndex"
                    defaultValue="10"/>

    <springProperty name="appLogImmediateFlush"
                    source="core.logging.appenders.appLog.immediateFlush"
                    defaultValue="true"/>

    <appender name="AppLogFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/${appLogFileName}${appLogFileExtension}</file>
        <immediateFlush>${appLogImmediateFlush}</immediateFlush>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>
                ${appLogPattern}
            </Pattern>
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${appLogFileName}${appLogFileExtension}.${appLogTimeBasedPattern}.%i
            </fileNamePattern>
            <maxFileSize>${appLogMaxFileSize}</maxFileSize>
            <maxHistory>${appLogMaxFileIndex}</maxHistory>
        </rollingPolicy>
    </appender>


    <springProperty name="perfLogFileName"
                    source="core.logging.appenders.perfLog.fileName"
                    defaultValue="perf"/>

    <springProperty name="perfLogPath"
                    source="core.logging.appenders.perfLog.path"
                    defaultValue="${LOG_PATH}"/>

    <springProperty name="perfLogFileExtension"
                    source="core.logging.appenders.perfLog.fileExtension"
                    defaultValue=".log"/>

    <springProperty name="perfLogPattern"
                    source="core.logging.appenders.perfLog.pattern"
                    defaultValue="%d{yyyy-MM-dd HH:mm:ss.SSS} ${HOSTNAME} [%t] [%level] %logger{36} [%X] - %msg%n"/>

    <springProperty name="perfLogMaxFileSize"
                    source="core.logging.appenders.perfLog.sizeBasedTriggeringPolicy.maxFileSize"
                    defaultValue="100MB"/>

    <springProperty name="perfLogMaxFileIndex"
                    source="core.logging.appenders.perfLog.fixedWindowRollingPolicy.maxFileIndex"
                    defaultValue="10"/>

    <appender name="PerfLogFile"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${perfLogPath}/${perfLogFileName}${perfLogFileExtension}</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>
                ${perfLogPattern}
            </Pattern>
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${perfLogPath}/${perfLogFileName}-%i${perfLogFileExtension}</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>${perfLogMaxFileIndex}</maxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>${perfLogMaxFileSize}</maxFileSize>
        </triggeringPolicy>
    </appender>

    <springProperty name="ecrimeLogFileName"
                    source="core.logging.appenders.ecrimeLog.fileName"
                    defaultValue="ecrime"/>

    <springProperty name="ecrimeLogPath"
                    source="core.logging.appenders.ecrimeLog.path"
                    defaultValue="${LOG_PATH}"/>

    <springProperty name="ecrimeLogFileExtension"
                    source="core.logging.appenders.ecrimeLog.fileExtension"
                    defaultValue=".log"/>

    <springProperty name="ecrimeLogPattern"
                    source="core.logging.appenders.ecrimeLog.pattern"
                    defaultValue="%d{yyyy-MM-dd HH:mm:ss.SSS} ${HOSTNAME} [%t] [%level] %logger{36} [%X] - %msg%n"/>

    <springProperty name="ecrimeLogMaxFileSize"
                    source="core.logging.appenders.ecrimeLog.sizeBasedTriggeringPolicy.maxFileSize"
                    defaultValue="100MB"/>

    <springProperty name="ecrimeLogMaxFileIndex"
                    source="core.logging.appenders.ecrimeLog.fixedWindowRollingPolicy.maxFileIndex"
                    defaultValue="10"/>

    <appender name="ECrimeLogFile"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${ecrimeLogPath}/${ecrimeLogFileName}${ecrimeLogFileExtension}</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>
                ${ecrimeLogPattern}
            </Pattern>
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${ecrimeLogPath}/${ecrimeLogFileName}-%i${ecrimeLogFileExtension}</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>${ecrimeLogMaxFileIndex}</maxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>${ecrimeLogMaxFileSize}</maxFileSize>
        </triggeringPolicy>
    </appender>

    <springProperty name="activityLogFileName"
                    source="core.logging.appenders.activityLog.fileName"
                    defaultValue="activity"/>

    <springProperty name="activityLogPath"
                    source="core.logging.appenders.activityLog.path"
                    defaultValue="${LOG_PATH}"/>

    <springProperty name="activityLogFileExtension"
                    source="core.logging.appenders.activityLog.fileExtension"
                    defaultValue=".log"/>

    <springProperty name="activityLogPattern"
                    source="core.logging.appenders.activityLog.pattern"
                    defaultValue="%d{yyyy-MM-dd HH:mm:ss.SSS} ${HOSTNAME} [%t] [%level] %logger{36} [%X] - %msg%n"/>

    <springProperty name="activityLogMaxFileSize"
                    source="core.logging.appenders.activityLog.sizeBasedTriggeringPolicy.maxFileSize"
                    defaultValue="100MB"/>

    <springProperty name="activityLogMaxFileIndex"
                    source="core.logging.appenders.activityLog.fixedWindowRollingPolicy.maxFileIndex"
                    defaultValue="10"/>

    <appender name="ActivityLogFile"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${activityLogPath}/${activityLogFileName}${activityLogFileExtension}</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>
                ${activityLogPattern}
            </Pattern>
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${activityLogPath}/${activityLogFileName}-%i${activityLogFileExtension}</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>${activityLogMaxFileIndex}</maxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>${activityLogMaxFileSize}</maxFileSize>
        </triggeringPolicy>
    </appender>

    <springProperty name="reqResDataLogFileName"
                    source="core.logging.appenders.reqResDataLog.fileName"
                    defaultValue="reqresdata"/>

    <springProperty name="reqResDataLogPath"
                    source="core.logging.appenders.reqResDataLog.path"
                    defaultValue="${LOG_PATH}"/>

    <springProperty name="reqResDataLogFileExtension"
                    source="core.logging.appenders.reqResDataLog.fileExtension"
                    defaultValue=".log"/>

    <springProperty name="reqResDataLogPattern"
                    source="core.logging.appenders.reqResDataLog.pattern"
                    defaultValue="%d{yyyy-MM-dd HH:mm:ss.SSS} ${HOSTNAME} [%t] [%level] %logger{36} [%X] - %msg%n"/>

    <springProperty name="reqResDataLogMaxFileSize"
                    source="core.logging.appenders.reqResDataLog.sizeBasedTriggeringPolicy.maxFileSize"
                    defaultValue="100MB"/>

    <springProperty name="reqResDataLogMaxFileIndex"
                    source="core.logging.appenders.reqResDataLog.fixedWindowRollingPolicy.maxFileIndex"
                    defaultValue="10"/>

    <appender name="ReqResDataLogFile"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${reqResDataLogPath}/${reqResDataLogFileName}${reqResDataLogFileExtension}</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>
                ${reqResDataLogPattern}
            </Pattern>
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${reqResDataLogPath}/${reqResDataLogFileName}-%i${reqResDataLogFileExtension}
            </fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>${reqResDataLogMaxFileIndex}</maxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>${reqResDataLogMaxFileSize}</maxFileSize>
        </triggeringPolicy>
    </appender>

    <if condition="&quot;${asyncLoggingSwitch}&quot;.equals(&quot;ASYNC_&quot;)">
        <then>

            <springProperty name="async_AppLogDiscardingThreshold"
                            source="core.logging.appenders.asyncAppLog.discardingthreshold"
                            defaultValue="0"/>

            <springProperty name="async_AppLogQueueSize"
                            source="core.logging.appenders.asyncAppLog.queuesize"
                            defaultValue="50000"/>

            <springProperty name="async_AppLogIncludeCallerData"
                            source="core.logging.appenders.asyncAppLog.includecallerdata"
                            defaultValue="false"/>

            <springProperty name="async_AppLogMaxFlushTime"
                            source="core.logging.appenders.asyncAppLog.maxflushtime"
                            defaultValue="1000"/>

            <springProperty name="async_AppLogNeverBlock"
                            source="core.logging.appenders.asyncAppLog.neverblock"
                            defaultValue="true"/>

            <appender name="ASYNC_AppLogFile" class="ch.qos.logback.classic.AsyncAppender">
                <discardingThreshold>${async_AppLogDiscardingThreshold}</discardingThreshold>
                <appender-ref ref="AppLogFile"/>
                <queueSize>${async_AppLogQueueSize}</queueSize>
                <includeCallerData>${async_AppLogIncludeCallerData}</includeCallerData>
                <maxFlushTime>${async_AppLogMaxFlushTime}</maxFlushTime>
                <neverBlock>${async_AppLogNeverBlock}</neverBlock>
            </appender>

            <springProperty name="async_PerfLogDiscardingThreshold"
                            source="core.logging.appenders.asyncPerfLog.discardingthreshold" defaultValue="0"/>

            <springProperty name="async_PerfLogQueueSize" source="core.logging.appenders.asyncPerfLog.queuesize"
                            defaultValue="50000"/>

            <springProperty name="async_PerfLogIncludeCallerData"
                            source="core.logging.appenders.asyncPerfLog.includecallerdata" defaultValue="false"/>

            <springProperty name="async_PerfLogMaxFlushTime" source="core.logging.appenders.asyncPerfLog.maxflushtime"
                            defaultValue="1000"/>

            <springProperty name="async_PerfLogNeverBlock" source="core.logging.appenders.asyncPerfLog.neverblock"
                            defaultValue="true"/>

            <appender name="ASYNC_PerfLogFile" class="ch.qos.logback.classic.AsyncAppender">
                <discardingThreshold>${async_PerfLogDiscardingThreshold}</discardingThreshold>
                <appender-ref ref="PerfLogFile"/>
                <queueSize>${async_PerfLogQueueSize}</queueSize>
                <includeCallerData>${async_PerfLogIncludeCallerData}</includeCallerData>
                <maxFlushTime>${async_PerfLogMaxFlushTime}</maxFlushTime>
                <neverBlock>${async_PerfLogNeverBlock}</neverBlock>
            </appender>


            <springProperty name="async_ECrimeLogDiscardingThreshold"
                            source="core.logging.appenders.asyncECrimeLog.discardingthreshold"
                            defaultValue="0"/>

            <springProperty name="async_ECrimeLogQueueSize"
                            source="core.logging.appenders.asyncECrimeLog.queuesize"
                            defaultValue="50000"/>

            <springProperty name="async_ECrimeLogIncludeCallerData"
                            source="core.logging.appenders.asyncECrimeLog.includecallerdata"
                            defaultValue="false"/>

            <springProperty name="async_ECrimeLogMaxFlushTime"
                            source="core.logging.appenders.asyncECrimeLog.maxflushtime"
                            defaultValue="1000"/>

            <springProperty name="async_ECrimeLogNeverBlock"
                            source="core.logging.appenders.asyncECrimeLog.neverblock"
                            defaultValue="true"/>

            <appender name="ASYNC_ECrimeLogFile" class="ch.qos.logback.classic.AsyncAppender">
                <discardingThreshold>${async_ECrimeLogDiscardingThreshold}</discardingThreshold>
                <appender-ref ref="ECrimeLogFile"/>
                <queueSize>${async_ECrimeLogQueueSize}</queueSize>
                <includeCallerData>${async_ECrimeLogIncludeCallerData}</includeCallerData>
                <maxFlushTime>${async_ECrimeLogMaxFlushTime}</maxFlushTime>
                <neverBlock>${async_ECrimeLogNeverBlock}</neverBlock>
            </appender>

            <springProperty name="async_ActivityLogDiscardingThreshold"
                            source="core.logging.appenders.asyncActivityLog.discardingthreshold"
                            defaultValue="0"/>

            <springProperty name="async_ActivityLogQueueSize"
                            source="core.logging.appenders.asyncActivityLog.queuesize"
                            defaultValue="50000"/>

            <springProperty name="async_ActivityLogIncludeCallerData"
                            source="core.logging.appenders.asyncActivityLog.includecallerdata"
                            defaultValue="false"/>

            <springProperty name="async_ActivityLogMaxFlushTime"
                            source="core.logging.appenders.asyncActivityLog.maxflushtime"
                            defaultValue="1000"/>

            <springProperty name="async_ActivityLogNeverBlock"
                            source="core.logging.appenders.asyncActivityLog.neverblock"
                            defaultValue="true"/>

            <appender name="ASYNC_ActivityLogFile" class="ch.qos.logback.classic.AsyncAppender">
                <discardingThreshold>${async_ActivityLogDiscardingThreshold}</discardingThreshold>
                <appender-ref ref="ActivityLogFile"/>
                <queueSize>${async_ActivityLogQueueSize}</queueSize>
                <includeCallerData>${async_ActivityLogIncludeCallerData}</includeCallerData>
                <maxFlushTime>${async_ActivityLogMaxFlushTime}</maxFlushTime>
                <neverBlock>${async_ActivityLogNeverBlock}</neverBlock>
            </appender>

            <springProperty name="async_ReqResDataLogDiscardingThreshold"
                            source="core.logging.appenders.asyncReqResDataLog.discardingthreshold"
                            defaultValue="0"/>

            <springProperty name="async_ReqResDataLogQueueSize"
                            source="core.logging.appenders.asyncReqResDataLog.queuesize"
                            defaultValue="50000"/>

            <springProperty name="async_ReqResDataLogIncludeCallerData"
                            source="core.logging.appenders.asyncReqResDataLog.includecallerdata"
                            defaultValue="false"/>

            <springProperty name="async_ReqResDataLogMaxFlushTime"
                            source="core.logging.appenders.asyncReqResDataLog.maxflushtime"
                            defaultValue="1000"/>

            <springProperty name="async_ReqResDataLogNeverBlock"
                            source="core.logging.appenders.asyncReqResDataLog.neverblock"
                            defaultValue="true"/>

            <appender name="ASYNC_ReqResDataLogFile" class="ch.qos.logback.classic.AsyncAppender">
                <discardingThreshold>${async_ReqResDataLogDiscardingThreshold}</discardingThreshold>
                <appender-ref ref="ReqResDataLogFile"/>
                <queueSize>${async_ReqResDataLogQueueSize}</queueSize>
                <includeCallerData>${async_ReqResDataLogIncludeCallerData}</includeCallerData>
                <maxFlushTime>${async_ReqResDataLogMaxFlushTime}</maxFlushTime>
                <neverBlock>${async_ReqResDataLogNeverBlock}</neverBlock>
            </appender>
        </then>
    </if>

    <logger name="org.rh.example" level="debug">
        <appender-ref ref="${asyncLoggingSwitch}AppLogFile"/>
        <appender-ref ref="${asyncLoggingSwitch}PerfLogFile"/>
        <appender-ref ref="${asyncLoggingSwitch}ECrimeLogFile"/>
        <appender-ref ref="${asyncLoggingSwitch}ActivityLogFile"/>
        <appender-ref ref="${asyncLoggingSwitch}ReqResDataLogFile"/>
    </logger>

    <root level="info">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="${asyncLoggingSwitch}AppLogFile"/>
    </root>

<!--    <logger name="perf" level="debug">-->
<!--        <appender-ref ref="STDOUT"/>-->
<!--        <appender-ref ref="${asyncLoggingSwitch}PerfLogFile"/>-->
<!--    </logger>-->

<!--    <logger name="ecrime" level="debug">-->
<!--        <appender-ref ref="STDOUT"/>-->
<!--        <appender-ref ref="${asyncLoggingSwitch}ECrimeLogFile"/>-->
<!--    </logger>-->

<!--    <logger name="activity" level="debug" additivity="false">-->
<!--        <appender-ref ref="STDOUT"/>-->
<!--        <appender-ref ref="${asyncLoggingSwitch}ActivityLogFile"/>-->
<!--    </logger>-->

<!--    <logger name="reqresdata" level="debug" additivity="false">-->
<!--        <appender-ref ref="STDOUT"/>-->
<!--        <appender-ref ref="${asyncLoggingSwitch}ReqResDataLogFile"/>-->
<!--    </logger>-->

    <statusListener class="ch.qos.logback.core.status.OnConsoleStatusListener"/>

</configuration>